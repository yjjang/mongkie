*****************
Import and Export
*****************

Interaction data sets can be loaded and stored using different file formats, including `GraphML <http://graphml.graphdrawing.org>`_ (Graph Markup Language) and `CSV` (Comma-Separated Values). `GraphML` (Graph Markup Language) is a comprehensive and easy-to-use file format for graphs. Its main features include supports of storing directed or undirected or mixed graphs, hyper-graphs, hierarchical graphs, graphical representations, references to external data, and application-specific attributes. `CSV` (Comma-Separated Values) stores tabular data sets in a plain-text form, and is a basic file format that is widely supported by a wide range of scientific applications for loading or saving their data sets.

MONGKIE comes with built-in parsers for those files to read a graph or attributes of its nodes and edges from the given data file. GraphML file fully stores the structural information of a graph, hence it is quite straightforward to import a graph using that. CSV file, however, requires some extra steps to import a graph. As a first step, one need to prepare two files - one containing nodes and their attributes, and another containing an edge list and attributes. The CSV file containing nodes needs to include a column containing unique node IDs. The edge list CSV should include columns for `source` and `target`, containing node IDs of the start and end node for each edge. By simply going to `File -> Import from CSV Files`, a dialog window for importing both files will be appear, then the wizard UI will guide you to remaining steps. In following steps, one can make several modifications to properties of the importing graph - e.g. one can rename column names, specify if edges are `directed` or `undirected`, select columns of `source` and `target` for edges etc. Also, the type of each column in the node or edge table will be appropriately inferred according to the literal expression of their values - decimal data as `Integer`, floating points as `Double`, comma-separated text fields as `String Array`. When all steps are gone, the report dialog finally shows the summary of the imported graph, including number of nodes and edges, type of graph, issues occurred during the importing process etc. Furthermore, MONGKIE also use the CSV file as a input format in order to import expression profiles, or additional attributes of nodes or edges through the similar UI concepts applied to importing graphs.

MONGKIE is capable to export the graph in the visualization to 1) the GraphML file that contains all graph elements in one formatted file, or 2) two CSV files - each file stores the list of nodes and edges in a tabular format respectively. Exported graph serializations can be later used in not only MONGKIE itself, but also external graph visualization softwares (:ref:`Shannon et al., 2003 <Shan03>` and :ref:`Bastian et al., 2009 <BaHJ09>`). Once satisfied with the network visualization, one can save it in one of multiple image formats - vector graphics, like SVG (Scalable Vector Graphics), EPS (Encapsulated PostScript), or bitmap images, like PNG, JPG, GIF, and BMP files.

MONGKIE also provides its own visual graph file format (`VLG`) that stores all visualization-wide properties - e.g. visual representations of each element, graph layout, node positions or visibilities, display scale, etc. - as well as data attributes of the whole graph in the network visualization, therefore one can save the current analysis in the `VLG` file, then later reopen it for continuing the analysis.
